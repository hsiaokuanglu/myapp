{"version":3,"sources":["index.js"],"names":["Square","props","className","onClick","value","Board","state","squares","Array","fill","xIsNext","i","this","slice","calculateWinner","setState","handleClick","status","winner","renderSquare","React","Component","Game","lines","length","a","b","c","ReactDOM","render","document","getElementById"],"mappings":"0LAIA,SAASA,EAAOC,GACf,OACE,4BAAQC,UAAU,SAASC,QAASF,EAAME,SAC1CF,EAAMG,O,IAKHC,E,YACJ,WAAYJ,GAAQ,IAAD,8BAClB,4CAAMA,KACDK,MAAQ,CACZC,QAASC,MAAM,GAAGC,KAAK,MACzBC,SAAS,GAJU,E,yEAQPC,GACX,IAAMJ,EAAUK,KAAKN,MAAMC,QAAQM,QAC/BC,EAAgBP,IAAYA,EAAQI,KAGxCJ,EAAQI,GAAKC,KAAKN,MAAMI,QAAU,IAAM,IACxCE,KAAKG,SAAS,CACdR,QAASA,EACTG,SAAUE,KAAKN,MAAMI,a,mCAGTC,GAAI,IAAD,OACjB,OAAO,kBAACX,EAAD,CACLI,MAAOQ,KAAKN,MAAMC,QAAQI,GAC1BR,QAAS,kBAAM,EAAKa,YAAYL,Q,+BAIhC,IACIM,EADEC,EAASJ,EAAgBF,KAAKN,MAAMC,SAQ5C,OALGU,EADGC,EACM,WAAaA,EAEb,iBAAmBN,KAAKN,MAAMI,QAAU,IAAM,KAIxD,6BACD,yBAAKR,UAAU,UAAUe,GACzB,yBAAKf,UAAU,aACZU,KAAKO,aAAa,GAClBP,KAAKO,aAAa,GAClBP,KAAKO,aAAa,IAErB,yBAAKjB,UAAU,aACZU,KAAKO,aAAa,GAClBP,KAAKO,aAAa,GAClBP,KAAKO,aAAa,IAErB,yBAAKjB,UAAU,aACZU,KAAKO,aAAa,GAClBP,KAAKO,aAAa,GAClBP,KAAKO,aAAa,S,GAnDHC,IAAMC,WA0DpBC,E,iLAEL,OACE,yBAAKpB,UAAU,QAChB,yBAAKA,UAAU,cACb,kBAACG,EAAD,OAEF,yBAAKH,UAAU,aACb,8BACA,mC,GATekB,IAAMC,WAgBzB,SAASP,EAAgBP,GAWxB,IAVA,IAAMgB,EAAQ,CACb,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAECZ,EAAI,EAAGA,EAAIY,EAAMC,OAAQb,IAAK,CAAC,IAAD,cACpBY,EAAMZ,GADc,GAC/Bc,EAD+B,KAC5BC,EAD4B,KACzBC,EADyB,KAEtC,GAAIpB,EAAQkB,IAAMlB,EAAQkB,KAAOlB,EAAQmB,IAAMnB,EAAQkB,KAAOlB,EAAQoB,GACrE,OAAOpB,EAAQkB,GAGjB,OAAO,KAIRG,IAASC,OACP,kBAACP,EAAD,MACAQ,SAASC,eAAe,U","file":"static/js/main.eeca6ec6.chunk.js","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css'\r\n\r\nfunction Square(props) {\r\n\treturn (\r\n\t  <button className=\"square\" onClick={props.onClick}>\r\n\t\t{props.value}\r\n\t  </button>\r\n\t);\r\n}\r\n\r\nclass Board extends React.Component {\r\n  constructor(props) {\r\n  \tsuper(props);\r\n  \tthis.state = {\r\n  \t\tsquares: Array(9).fill(null),\r\n\t\txIsNext: true\r\n\t};\r\n  }\r\n\r\n  handleClick(i) {\r\n  \tconst squares = this.state.squares.slice();\r\n  \tif (calculateWinner(squares) || squares[i]) {\r\n  \t\treturn;\r\n\t}\r\n  \tsquares[i] = this.state.xIsNext ? 'X' : 'O';\r\n  \tthis.setState({\r\n\t  squares: squares,\r\n\t  xIsNext: !this.state.xIsNext})\r\n  }\r\n\r\n  renderSquare(i) {\r\n\treturn <Square\r\n\t\t\tvalue={this.state.squares[i]}\r\n\t\t\tonClick={() => this.handleClick(i)}/>;\r\n  }\r\n\r\n  render() {\r\n  \tconst winner = calculateWinner(this.state.squares);\r\n  \tlet status;\r\n  \tif (winner) {\r\n  \t\tstatus = 'Winner: ' + winner;\r\n\t} else {\r\n  \t\tstatus = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\r\n\t}\r\n\r\n\treturn (\r\n\t  <div>\r\n\t\t<div className=\"status\">{status}</div>\r\n\t\t<div className=\"board-row\">\r\n\t\t  {this.renderSquare(0)}\r\n\t\t  {this.renderSquare(1)}\r\n\t\t  {this.renderSquare(2)}\r\n\t\t</div>\r\n\t\t<div className=\"board-row\">\r\n\t\t  {this.renderSquare(3)}\r\n\t\t  {this.renderSquare(4)}\r\n\t\t  {this.renderSquare(5)}\r\n\t\t</div>\r\n\t\t<div className=\"board-row\">\r\n\t\t  {this.renderSquare(6)}\r\n\t\t  {this.renderSquare(7)}\r\n\t\t  {this.renderSquare(8)}\r\n\t\t</div>\r\n\t  </div>\r\n\t);\r\n  }\r\n}\r\n\r\nclass Game extends React.Component {\r\n  render() {\r\n\treturn (\r\n\t  <div className=\"game\">\r\n\t\t<div className=\"game-board\">\r\n\t\t  <Board />\r\n\t\t</div>\r\n\t\t<div className=\"game-info\">\r\n\t\t  <div>{/* status */}</div>\r\n\t\t  <ol>{/* TODO */}</ol>\r\n\t\t</div>\r\n\t  </div>\r\n\t);\r\n  }\r\n}\r\n\r\nfunction calculateWinner(squares) {\r\n\tconst lines = [\r\n\t\t[0, 1, 2],\r\n\t\t[3, 4, 5],\r\n\t\t[6, 7, 8],\r\n\t\t[0, 3, 6],\r\n\t\t[1, 4, 7],\r\n\t\t[2, 5, 8],\r\n\t\t[0, 4, 8],\r\n\t\t[2, 4, 6],\r\n\t];\r\n\tfor (let i = 0; i < lines.length; i++) {\r\n\t\tconst [a, b, c] = lines[i];\r\n\t\tif (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n\t\t\treturn squares[a];\r\n\t\t}\r\n\t}\r\n\treturn null;\r\n}\r\n// ========================================\r\n\r\nReactDOM.render(\r\n  <Game />,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}